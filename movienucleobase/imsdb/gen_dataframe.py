""".. module:: movienucleobase.py   :synopsis: Writting information to files.. moduleauthor:: Pedro Araujo <pedroaraujo@colorlesscube.com>.. moduleauthor:: Pedro Nogueira <pedro.fig.nogueira@gmail.com>"""import pandas as pdimport jsonimport imsdb.utilities as utilfrom json import dumpsdef build_df_chars(movie):    """    Builds dataframe with 5 columns    1 - Id    2 - Character name    3 - Character gender    4 - Number of scenes in which he appeared    5 - Character he interacted with    """    df_id_1, df_names, df_gender, df_n_scenes_real, df_scenes_real = movie.build_table_chars()    df_movie = {'id': pd.Series(df_id_1)                , 'name': pd.Series(df_names)                , 'gender': pd.Series(df_gender)                , 'nsceneappearances': pd.Series(df_n_scenes_real)                #, 'Scene_Appearances': pd.Series(df_scenes_real),                }    df = pd.DataFrame(df_movie)    return dfdef build_df_interactions(movie):    """    Builds a dataframe with 5 columns relative to interactions    1 - Character 1 Name    2 - Character 2 Name    3 - Character 1 Id    4 - Character 2 Id    5 - Number of Interactions    """    df_char_1, df_char_2, df_char_1_id, df_char_2_id, df_number = movie.build_table_interactions()    df_movie = {'source': pd.Series(df_char_1)                , 'target': pd.Series(df_char_2)                , 'sourceid': pd.Series(df_char_1_id)                , 'targetid': pd.Series(df_char_2_id)                , 'ninteractions': pd.Series(df_number),                }    df = pd.DataFrame(df_movie)    return dfdef build_df_mentions(movie):    """    Builds dataframe with 5 columns relative to mentions    1 - Character 1 Name    2 - Character 2 Name    3 - Character 1 Id    4 - Character 2 Id    5 - Number of Interactions    """    df_char_1, df_char_2, df_char_1_id, df_char_2_id, df_number = movie.build_table_mentions()    df_movie = {'source': pd.Series(df_char_1)                , 'target': pd.Series(df_char_2)                , 'sourceid': pd.Series(df_char_1_id)                , 'targetid': pd.Series(df_char_2_id)                , 'nmentions': pd.Series(df_number),                }    df = pd.DataFrame(df_movie)    return dfdef write_df(i_df, df_name):    # Write to the database    util.write_table_to_my_sql(i_df, df_name, '')    # Create a Pandas Excel writer    writer = pd.ExcelWriter(df_name + '.xlsx')    i_df.to_excel(writer, sheet_name='Sheet1')    writer.save()def write_nodes_edges_to_json(i_df_nodes, i_df_edges, json_name):    output = {"nodes": [], "links": []}    for d in i_df_nodes.to_dict(orient='records'):        output["nodes"].append(d)    for d in i_df_edges.to_dict(orient='records'):        output["links"].append(d)    json_out = dumps(output)    with open(json_name + '.json', 'w') as f:        f.write(str(json_out))